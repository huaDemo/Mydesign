模板方法模式概述:
    定义一个操作中算法的框架，而将一些步骤延迟到子类中。
    模板方法模式使得子类可以不改变一个算法的结构即可重定义该算法的某些特定步骤。
    模板方法模式是一种基于继承的代码复用技术，它是一种类行为型模式。
模板方法模式角色:
    (1) AbstractClass（抽象类）：在抽象类中定义了一系列基本操作(PrimitiveOperations)，这些基本操作可以是具体的，也可以是抽象的，每一个基本操作对应算法的一个步骤，在其子类中可以重定义或实现这些步骤。
        同时，在抽象类中实现了一个模板方法(Template Method)，用于定义一个算法的框架，模板方法不仅可以调用在抽象类中实现的基本方法，也可以调用在抽象类的子类中实现的基本方法，还可以调用其他对象中的方法。
    (2) ConcreteClass（具体子类）：它是抽象类的子类，用于实现在父类中声明的抽象基本操作以完成子类特定算法的步骤，也可以覆盖在父类中已经实现的具体基本操作。
模板方法模式优缺点:
    优点:
        抽出不变行为，对代码的重复利用;要扩展的话，只需添加子类
    缺点:
        按照我们的设计习惯，抽象类负责声明最抽象、最一般的事情属性和方法，实现类完成具体的事物属性和方法。但是模板方法模式却颠倒了，抽象类定义了部分抽象方法，由子类实现，子类执行结果影响了父类的结果，也就是子类对父类产生了影响，这在复杂的项目中，会带来代码阅读的难度，而且也会让新手产生不适感