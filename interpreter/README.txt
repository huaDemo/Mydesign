解释器模式定义:
    给定一个语言，解释器模式可以定义出其文法的一种表示,并定义一个解释器,该解释器使用该表示来解释语言中的句子.
涉及到的角色:
    AbstractExpression: 抽象表达式,声明一个抽象的解释操作父类,定义一个抽象的解释方法,具体的实现由子类解释器完成/
    TerminalExpression: 终结符表达式,实现文法中与终结符有关的解释操作,文法中每一个终结符都有一个具体的终结表达式与之对应
    NonterminalExpression: 非终结符表达式,实现文法中与非终结符有关的解释操作
    Context: 上下文环境类,包含解释器之外的全局信息
    Client: 客户端,解析表达式,构建抽象语法树,执行具体的解释操作等.
优缺点:
    优点:
        灵活性强,如上边的例子,当我们想对文法规则进行扩展延伸时,只需要增加相应的非终结符解释器,并在构建语法树的时候使用新增的解释器对象进行具体的解释即可.
    缺点:
        因为每一条文法都可以对应至少一个解释器,会生成大量的类,导致后期维护困难,而且对应复杂的文法,构建语法树会显得异常繁琐.