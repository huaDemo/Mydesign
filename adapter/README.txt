适配器模式概述:
    适配器模式把一个类的接口变换成客户端所期待的另一种接口，从而使原本因接口不匹配而无法在一起工作的两个类能够在一起工作。
适配器模式的用途:
    即Adapter模式使得原本由于接口不兼容而不能一起工作的那些类可以在一起工作。
模式中的角色:
    目标接口（Target）：客户所期待的接口。目标可以是具体的或抽象的类，也可以是接口。
    需要适配的类（Adaptee）：需要适配的类或适配者类。
    适配器（Adapter）：通过包装一个需要适配的对象，把原接口转换成目标接口。　　
适配器模式的优点:
　　更好的复用性 :
        系统需要使用现有的类，而此类的接口不符合系统的需要。那么通过适配器模式就可以让这些功能得到更好的复用。
    更好的扩展性 :
        在实现适配器功能的时候，可以调用自己开发的功能，从而自然地扩展系统的功能。
适配器模式的缺点:
　　过多的使用适配器，会让系统非常零乱，不易整体进行把握。比如，明明看到调用的是A接口，其实内部被适配成了B接口的实现，一个系统如果太多出现这种情况，无异于一场灾难。因此如果不是很有必要，可以不使用适配器，而是直接对系统进行重构。