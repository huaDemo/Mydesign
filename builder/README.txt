建造者模式概念
    定义： 将一个复杂的对象构建与其表示相分离，使得同样的构建过程可以创建不同的表示；
    核心 ： 构建与表示分离，同构建不同表示
建造者模式角色
    （1）抽象建造者(Builder)角色：该角色 是用于规范产品的各个组成部分，并进行抽象，一般独立于应用程序的逻辑。
    （2）具体建造者( ConcreteBuilder )角色：该角色实 现出抽象建造者中定义的所有方法，并且返回一个组建好的产品实例。
    （3）产品( Product )角色：该角色是建造中的复杂对象，一个系统中会有多于一个的产品类，这些产品并不一定有公共的接口，完全可以是不相关联的。
    （4）指导者(Director)角色：该角色负责安排已有的模块的顺序，然后告诉建造者 Builder开始建造 。
优缺点
    （1）优点：
    A.可以让你改变产品的内部表示。
    B.封装建筑和代表性的代码。
    C.提供超过施工工艺的步骤的控制。
    （2）缺点：
    A.需要创造各种不同类型的产品单独ConcreteBuilder。
区别于抽象工厂模式 ：
    (1)与抽象工厂模式 相似，因为它也可以创建复杂对象。主要的区别是建造者模式着重于 一步步构造一个复杂对象，关注的是零件类型和装配工艺的顺序 。而抽象工厂模式着重于多个系列的产品对象（简单的或是复杂的）。建造者模式在最后的一步返回产品，而对于抽象工厂来说，产品是立即返回的。
    (2)在建造者模式里，有个指导者，由指导者来管理建造者，用户是与指导者联系的，指导者联系建造者最后得到产品。即建造模式可以强制实行一种分步骤进行的建造过程。